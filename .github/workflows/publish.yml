name: Publish

on:
  push:
    branches: [master, release]

env:
  node_version: "14.x"
  tf_version: "0.14.8" # must conform to value in terraform-iac/*/app/main.tf

jobs:
  env:
    name: Set Env Vars
    runs-on: ubuntu-latest
    steps:
      - name: Set up Beta Environment Variables
        if: github.ref == 'refs/heads/master'
        run: |
          matrix='{
            "env":[
              {
                "ecr_repo_name":"terraform-aws-schema-migrations-lambda",
                "ecr_repo_tag":"beta",
                "tf_working_dir":".",
                "aws_key_name":"byu_oit_terraform_prd_key",
                "aws_secret_name":"byu_oit_terraform_prd_secret"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV
      - name: Set up Latest Environment Variables
        if: github.ref == 'refs/heads/release'
        run: |
          matrix='{
            "env":[
              {
                "ecr_repo_name":"terraform-aws-schema-migrations-lambda",
                "ecr_repo_tag":"latest",
                "tf_working_dir":".",
                "aws_key_name":"byu_oit_terraform_prd_key",
                "aws_secret_name":"byu_oit_terraform_prd_secret"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

    outputs:
      matrix: ${{ env.matrix }}

  build_and_deploy:
    name: Build and Deploy Schema Migrations Lambda
    runs-on: ubuntu-latest
    needs: env
    strategy:
      matrix: ${{ fromJson(needs.env.outputs.matrix) }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node_version }}

      - name: Check out
        uses: actions/checkout@v2

      - name: Disallow Concurrent Runs
        uses: byu-oit/github-action-disallow-concurrent-runs@v2
        with:
          token: ${{ github.token }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets[matrix.env.aws_key_name] }}
          aws-secret-access-key: ${{ secrets[matrix.env.aws_secret_name] }}
          aws-region: us-west-2

      - name: Log into Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Lambda Package Version
        uses: byu-oit/github-action-package-json@v1
        id: package
        with:
          directory: lambda
          version: true

      - name: Build and Push the Docker image
        working-directory: lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPO: ${{ matrix.env.ecr_repo_name }} # ecr_repo_name must match /lambda/iac/setup#ecr.name
          NAME_TAG: ${{ matrix.env.ecr_repo_tag }}
          VERSION_TAG: ${{ steps.package-version.outputs.version }}
          MAJOR_TAG: ${{ steps.package-version.outputs.major }}
          MINOR_TAG: ${{ steps.package-version.outputs.minor }}
        # Push multiple tags at once docker (since 20.10.0): https://github.com/docker/cli/pull/2220
        # GHA Docker Version is 20.10.x: https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO:$NAME_TAG -t $ECR_REGISTRY/$ECR_REPO:$VERSION_TAG -t $ECR_REGISTRY/$ECR_REPO:$MAJOR_TAG -t $ECR_REGISTRY/$ECR_REPO:$MINOR_TAG .
          docker push $ECR_REGISTRY/$ECR_REPO --all-tags
